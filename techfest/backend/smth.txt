

access_token = tokens["access_token"]
    refresh_token = tokens.get("refresh_token")  # store securely if present

    # OPTIONAL: fetch user profile via UserInfo (scopes control fields)
    async with httpx.AsyncClient(timeout=15.0) as client:
        userinfo_res = await client.get(
            f"{paypal_base}/v1/identity/openidconnect/userinfo?schema=openid",
            headers={"Authorization": f"Bearer {access_token}"}
        )
    userinfo = userinfo_res.json() if userinfo_res.status_code == 200 else {}

    # TODO: create a local session for the user, map their PayPal 'sub' or 'user_id'
    # Persist refresh_token server-side (DB / secrets vault), never in cookies.

    # Minimal demo response
    # In production, redirect to your app's dashboard or set a secure session cookie.
    return {"ok": True, "user": userinfo, "has_refresh_token": bool(refresh_token)}